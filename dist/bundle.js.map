{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACA2D;AACvB;AACJ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAS;AACrB;AACA;AACA;AACA,sBAAsB,uEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACmB;;;;;;;;;;;;;;;;;;;;AC9EpB,gBAAgB,SAAI,IAAI,SAAI;AAC5B;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2D;AACvB;AACF;AACF;AACA;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yCAAK;AACrB,oBAAoB,2CAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yCAAK;AACjB,gBAAgB,yCAAO;AACvB;AACA;AACA;AACA;AACA,QAAQ,yCAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA,8CAA8C,qBAAqB;AACnE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAAc;AACpC;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qBAAqB,IAAI;AACzB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,CAAC;AACmB;;;;;;;;;;;;;;;;;ACzVuC;AACzB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAAc;AACpC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAA0B,mDAAmD;AAC7E,0BAA0B,mDAAmD;AAC7E,0BAA0B,mDAAmD;AAC7E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACoB;;;;;;;;;;;;;;;ACnFrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,6BAA6B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACgB;;;;;;;;;;;;;;;;;;AChE0C;AACvB;AACJ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAS;AACrB;AACA;AACA;AACA,sBAAsB,uEAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACkB;;;;;;;;;;;;;;;AC9EZ;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;;;;;;UCzCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;;ACNkC;AACE;AACV;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAS;AACrB;AACA;AACA,YAAY,2CAAQ;AACpB;AACA,CAAC","sources":["webpack://card-game/./src/css/style.css?6b7b","webpack://card-game/./src/js/lose.ts","webpack://card-game/./src/js/play.ts","webpack://card-game/./src/js/start.ts","webpack://card-game/./src/js/timer.ts","webpack://card-game/./src/js/win.ts","webpack://card-game/./src/lib/template-engine.js","webpack://card-game/webpack/bootstrap","webpack://card-game/webpack/runtime/define property getters","webpack://card-game/webpack/runtime/hasOwnProperty shorthand","webpack://card-game/webpack/runtime/make namespace object","webpack://card-game/./src/js/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { templateEngine } from \"../lib/template-engine.js\";\nimport { StartPage } from \"./start\";\nimport { Timer } from \"./timer\";\nvar LosePage = /** @class */ (function () {\n    function LosePage(element) {\n        var _this = this;\n        this.timerResult = null;\n        this.buttonRestart = null;\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(\"передана не HTML элемент\");\n        }\n        this.element = element;\n        this.currentPage = \"lose\";\n        this.timer = new Timer();\n        this.render();\n        this.timerResult = Number(localStorage.getItem(\"timer\"));\n        var displayElement = document.querySelector(\".card-timer-watch\");\n        if (displayElement && this.timerResult !== null) {\n            this.timer.updateDisplay(displayElement, this.timerResult);\n        }\n        localStorage.removeItem(\"timer\");\n        this.buttonRestart = document.querySelector(\".card-celebrate-button\");\n        if (this.buttonRestart) {\n            this.buttonRestart.addEventListener(\"click\", function () {\n                _this.onClickButtonRestart();\n            });\n        }\n    }\n    LosePage.prototype.onClickButtonRestart = function () {\n        this.element.innerHTML = \"\";\n        localStorage.removeItem(\"level-card-game\");\n        new StartPage(this.element);\n    };\n    LosePage.prototype.render = function () {\n        var template = LosePage.template();\n        var element = templateEngine(template);\n        // Очищаем элемент перед добавлением нового контента\n        this.element.innerHTML = \"\";\n        this.element.appendChild(element);\n    };\n    LosePage.template = function () {\n        return {\n            tag: \"div\",\n            cls: \"card-box\",\n            content: [\n                {\n                    tag: \"img\",\n                    cls: \"card-celebrate-img\",\n                    attrs: {\n                        alt: \"смайлик поражения\",\n                        src: \"../static/lose.svg\",\n                    },\n                },\n                {\n                    tag: \"h6\",\n                    cls: \"card-celebrate-text\",\n                    content: \"Вы проиграли!\",\n                },\n                {\n                    tag: \"h6\",\n                    cls: \"card-celebrate-time-text\",\n                    content: \"Затраченное время:\",\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-timer-watch\",\n                    content: \"00:00\",\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-celebrate-button\",\n                    content: \"Играть снова\",\n                },\n            ],\n        };\n    };\n    return LosePage;\n}());\nexport { LosePage };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { templateEngine } from \"../lib/template-engine.js\";\nimport { StartPage } from \"./start\";\nimport { LosePage } from \"./lose\";\nimport { WinPage } from \"./win\";\nimport { Timer } from \"./timer\";\nvar PlayPage = /** @class */ (function () {\n    function PlayPage(element) {\n        var _this = this;\n        this.oponCards = [];\n        this.deck = [];\n        this.cardsForGame = [];\n        this.buttonRestart = null;\n        this.cards = null;\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(\"передана не HTML элемент\");\n        }\n        this.element = element;\n        this.currentPage = \"play\";\n        this.timer = new Timer();\n        this.level = localStorage.getItem(\"level-card-game\");\n        this.oponCards = [];\n        this.deck = this.createDeck();\n        if (!this.element.querySelector(\".card-deck\")) {\n            console.error(\"Элемент .card-deck не найден!\");\n            return;\n        }\n        this.buttonRestart = document.querySelector(\".btn-restart\");\n        if (this.buttonRestart) {\n            this.buttonRestart.addEventListener(\"click\", function () {\n                _this.onClickButtonRestart();\n            });\n        }\n        this.cards = document.querySelector(\".card-deck\");\n        if (this.cards) {\n            this.cards.addEventListener(\"click\", function (event) {\n                _this.onClickCard(event);\n            });\n        }\n    }\n    PlayPage.prototype.onClickCard = function (event) {\n        var target = event.target;\n        // Обработчик клика по карте\n        if (target.classList.contains(\"card-back\")) {\n            var indexStr = target.dataset.index;\n            if (indexStr && !isNaN(Number(indexStr))) {\n                var index = Number(indexStr);\n                // Проверяем, что индекс не уже в массиве\n                if (!this.oponCards.includes(index)) {\n                    this.oponCards.push(index);\n                    // Проверяем существование карты\n                    if (this.cardsForGame[index]) {\n                        this.renderCardOne(target, this.cardsForGame[index]);\n                        this.checkCardsMatch();\n                    }\n                }\n            }\n        }\n    };\n    PlayPage.prototype.checkCardsMatch = function () {\n        // Функция проверки на совпадение\n        if (this.oponCards.length % 2 === 0) {\n            var index1 = this.oponCards[this.oponCards.length - 2];\n            var index2 = this.oponCards[this.oponCards.length - 1];\n            var card1 = this.cardsForGame[index1];\n            var card2 = this.cardsForGame[index2];\n            if (card1.rank === card2.rank && card1.suit === card2.suit) {\n                this.checkGameOver();\n                // Карты совпали\n            }\n            else {\n                this.timer.reset();\n                Timer.globalReset();\n                new LosePage(this.element);\n            }\n        }\n    };\n    PlayPage.prototype.checkGameOver = function () {\n        if (this.oponCards.length === this.cardsForGame.length) {\n            this.timer.reset();\n            Timer.globalReset();\n            new WinPage(this.element);\n        }\n    };\n    PlayPage.prototype.onClickButtonRestart = function () {\n        this.timer.reset();\n        Timer.globalReset();\n        localStorage.removeItem(\"level-card-game\");\n        if (this.buttonRestart) {\n            this.buttonRestart.removeEventListener(\"click\", this.onClickButtonRestart);\n        }\n        if (this.cards) {\n            this.cards.removeEventListener(\"click\", this.onClickCard);\n        }\n        new StartPage(this.element);\n    };\n    PlayPage.prototype.createDeck = function () {\n        var _this = this;\n        var deck = [];\n        var ranks = [6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"];\n        var suits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"];\n        for (var _i = 0, suits_1 = suits; _i < suits_1.length; _i++) {\n            var suit = suits_1[_i];\n            for (var _a = 0, ranks_1 = ranks; _a < ranks_1.length; _a++) {\n                var rank = ranks_1[_a];\n                deck.push({\n                    rank: rank,\n                    suit: suit,\n                });\n            }\n        }\n        this.shuffleDeck(deck);\n        this.selectCardByLevel(deck);\n        this.cardsForGame = this.createDuble(deck);\n        this.shuffleDeck(this.cardsForGame);\n        this.render();\n        setTimeout(function () {\n            _this.renderCardCover();\n            _this.timer.startTimer();\n        }, 5000);\n        return deck;\n    };\n    PlayPage.prototype.selectCardByLevel = function (deck) {\n        var level = this.level;\n        switch (level) {\n            case \"1\":\n                deck.length = 3;\n                break;\n            case \"2\":\n                deck.length = 6;\n                break;\n            case \"3\":\n                deck.length = 9;\n                break;\n        }\n    };\n    PlayPage.prototype.createDuble = function (cards) {\n        // Функция создания дублей\n        var cardsForGame = [];\n        cards.forEach(function (card) {\n            cardsForGame.push(card);\n            cardsForGame.push(__assign({}, card));\n        });\n        return cardsForGame;\n    };\n    PlayPage.prototype.renderCardCover = function () {\n        // Функция отрисовки одной карты\n        var cards = this.element.querySelectorAll(\".card\");\n        cards.forEach(function (card, index) {\n            var htmlCard = card;\n            htmlCard.innerHTML = \"\";\n            htmlCard.classList.add(\"card-back\");\n            htmlCard.dataset.index = index.toString(); // Преобразуем индекс в строку\n        });\n        return cards;\n    };\n    PlayPage.prototype.shuffleDeck = function (deck) {\n        var _a;\n        // Функция перемешивания колоды\n        for (var i = deck.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            _a = [deck[j], deck[i]], deck[i] = _a[0], deck[j] = _a[1];\n        }\n    };\n    PlayPage.prototype.renderCardOne = function (elementTarget, card) {\n        // Функция отрисовки рубашек карты\n        var template = PlayPage.templateCard(card);\n        var element = templateEngine(template);\n        elementTarget.classList.remove(\"card-back\");\n        elementTarget.appendChild(element);\n    };\n    PlayPage.prototype.render = function () {\n        var template = PlayPage.template(this.cardsForGame);\n        var element = templateEngine(template);\n        this.element.innerHTML = \"\";\n        this.element.appendChild(element);\n    };\n    PlayPage.template = function (deck) {\n        return {\n            tag: \"div\",\n            cls: \"cards\",\n            content: [\n                {\n                    tag: \"div\",\n                    cls: \"control-panel\",\n                    content: [\n                        {\n                            tag: \"div\",\n                            cls: \"timer-box\",\n                            content: [\n                                {\n                                    tag: \"div\",\n                                    cls: \"timer-artical\",\n                                    content: [\n                                        {\n                                            tag: \"div\",\n                                            cls: \"timer-artical-sec\",\n                                            content: \"sek\",\n                                        },\n                                        {\n                                            tag: \"div\",\n                                            cls: \"timer-artical-sec\",\n                                            content: \"min\",\n                                        },\n                                    ],\n                                },\n                                {\n                                    tag: \"div\",\n                                    cls: \"timer-watch\",\n                                    content: \"00.00\",\n                                },\n                            ],\n                        },\n                        {\n                            tag: \"button\",\n                            cls: \"btn-restart\",\n                            content: \"Начать заново\",\n                        },\n                    ],\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-deck\",\n                    content: deck.map(function (card) { return ({\n                        tag: \"div\",\n                        cls: \"card\",\n                        content: [\n                            {\n                                tag: \"div\",\n                                cls: \"card-box-up\",\n                                content: {\n                                    tag: \"div\",\n                                    cls: \"card-small-box\",\n                                    content: [\n                                        {\n                                            tag: \"div\",\n                                            cls: \"card-name\",\n                                            content: card.rank,\n                                        },\n                                        {\n                                            tag: \"div\",\n                                            cls: [\n                                                \"card-small-suit\",\n                                                \"card-small-suit_\".concat(card.suit),\n                                            ],\n                                        },\n                                    ],\n                                },\n                            },\n                            {\n                                tag: \"div\",\n                                cls: [\"cart-suit\", \"cart-suit_\".concat(card.suit)],\n                            },\n                            {\n                                tag: \"div\",\n                                cls: \"card-box-down\",\n                                content: {\n                                    tag: \"div\",\n                                    cls: \"card-small-box-reverse\",\n                                    content: [\n                                        {\n                                            tag: \"div\",\n                                            cls: \"card-name\",\n                                            content: card.rank,\n                                        },\n                                        {\n                                            tag: \"div\",\n                                            cls: [\n                                                \"card-small-suit\",\n                                                \"card-small-suit_\".concat(card.suit),\n                                            ],\n                                        },\n                                    ],\n                                },\n                            },\n                        ],\n                    }); }),\n                },\n            ],\n        };\n    };\n    PlayPage.templateCard = function (card) {\n        return [\n            {\n                tag: \"div\",\n                cls: \"card-box-up\",\n                content: {\n                    tag: \"div\",\n                    cls: \"card-small-box\",\n                    content: [\n                        {\n                            tag: \"div\",\n                            cls: \"card-name\",\n                            content: card.rank,\n                        },\n                        {\n                            tag: \"div\",\n                            cls: [\n                                \"card-small-suit\",\n                                \"card-small-suit_\".concat(card.suit),\n                            ],\n                        },\n                    ],\n                },\n            },\n            {\n                tag: \"div\",\n                cls: [\"cart-suit\", \"cart-suit_\".concat(card.suit)],\n            },\n            {\n                tag: \"div\",\n                cls: \"card-box-down\",\n                content: {\n                    tag: \"div\",\n                    cls: \"card-small-box-reverse\",\n                    content: [\n                        {\n                            tag: \"div\",\n                            cls: \"card-name\",\n                            content: card.rank,\n                        },\n                        {\n                            tag: \"div\",\n                            cls: [\n                                \"card-small-suit\",\n                                \"card-small-suit_\".concat(card.suit),\n                            ],\n                        },\n                    ],\n                },\n            },\n        ];\n    };\n    return PlayPage;\n}());\nexport { PlayPage };\n","import { templateEngine } from \"../lib/template-engine.js\";\nimport { PlayPage } from \"./play\";\nvar StartPage = /** @class */ (function () {\n    function StartPage(element) {\n        var _a;\n        this.buttonChoice = null;\n        this.levelItems = null;\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(\"передана не HTML элемент\");\n        }\n        this.element = element;\n        this.currentPage = \"start\";\n        this.onHendlerClickLevel = this.onHendlerClickLevel.bind(this);\n        this.onHendkerClickStart = this.onHendkerClickStart.bind(this);\n        this.render();\n        this.level = this.element.querySelector(\".card-level-box\");\n        this.buttonChoice = this.element.querySelector(\".card-level-button\");\n        this.levelItems =\n            ((_a = this.element\n                .querySelector(\".card-level-box\")) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".card-level-item\")) || null;\n        this.level.addEventListener(\"click\", this.onHendlerClickLevel);\n        if (this.buttonChoice) {\n            this.buttonChoice.addEventListener(\"click\", this.onHendkerClickStart);\n        }\n    }\n    StartPage.prototype.render = function () {\n        var template = StartPage.template();\n        var element = templateEngine(template);\n        this.element.innerHTML = \"\"; // Очищаем элемент перед рендерингом\n        this.element.appendChild(element);\n    };\n    StartPage.prototype.onHendkerClickStart = function () {\n        this.element.innerHTML = \"\";\n        this.currentPage = \"play\";\n        new PlayPage(this.element);\n    };\n    StartPage.prototype.onHendlerClickLevel = function (event) {\n        var target = event.target;\n        if (!target.classList.contains(\"card-level-item\")) {\n            return;\n        }\n        if (this.levelItems) {\n            this.levelItems.forEach(function (item) {\n                item.classList.remove(\"card-level-item-choice\");\n            });\n        }\n        target.classList.add(\"card-level-item-choice\");\n        var level = target.textContent;\n        localStorage.setItem(\"level-card-game\", level);\n        if (this.buttonChoice) {\n            this.buttonChoice.removeAttribute(\"disabled\");\n        }\n    };\n    StartPage.template = function () {\n        return {\n            tag: \"div\",\n            cls: \"card-box\",\n            content: [\n                {\n                    tag: \"h6\",\n                    cls: \"card-level-text\",\n                    content: \"Выбери сложность\",\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-level-box\",\n                    content: [\n                        { tag: \"button\", cls: \"card-level-item\", content: 1 },\n                        { tag: \"button\", cls: \"card-level-item\", content: 2 },\n                        { tag: \"button\", cls: \"card-level-item\", content: 3 },\n                    ],\n                },\n                {\n                    tag: \"button\",\n                    cls: \"card-level-button\",\n                    content: \"Старт\",\n                    attrs: { disabled: true },\n                },\n            ],\n        };\n    };\n    return StartPage;\n}());\nexport { StartPage };\n","var Timer = /** @class */ (function () {\n    function Timer() {\n        this.timerId = null;\n        this.startTime = 0;\n        this.elapsedTime = 0;\n        this.isRunning = false;\n    }\n    Timer.prototype.startTimer = function () {\n        var _this = this;\n        if (!this.isRunning) {\n            console.log(\"start!\");\n            this.startTime = Date.now();\n            this.elapsedTime = 0;\n            this.timerId = Number(setInterval(function () { return _this.updateTimer(); }, 1000));\n            this.isRunning = true;\n        }\n    };\n    Timer.prototype.updateTimer = function () {\n        var displayElement = document.querySelector(\".timer-watch\");\n        if (this.isRunning && displayElement) {\n            this.elapsedTime = Date.now() - this.startTime;\n            this.updateDisplay(displayElement, this.elapsedTime);\n        }\n    };\n    Timer.prototype.updateDisplay = function (element, countTime) {\n        if (!element) {\n            console.error(\"Элемент для отображения таймера не найден\");\n            return;\n        }\n        var _a = this.timeConverter(countTime), minutes = _a[0], seconds = _a[1];\n        if (element) {\n            element.textContent = \"\".concat(minutes\n                .toString()\n                .padStart(2, \"0\"), \":\").concat(seconds.toString().padStart(2, \"0\"));\n        }\n    };\n    Timer.prototype.timeConverter = function (timer) {\n        var minutes = Math.floor(timer / 60000);\n        var seconds = Math.floor((timer % 60000) / 1000);\n        return [minutes, seconds];\n    };\n    Timer.prototype.stopTimer = function () {\n        localStorage.setItem(\"timer\", this.elapsedTime.toString());\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n        this.isRunning = false;\n    };\n    Timer.prototype.reset = function () {\n        this.stopTimer();\n        this.elapsedTime = 0;\n    };\n    // Статический метод для глобального сброса всех таймеров\n    Timer.globalReset = function () {\n        console.log(\"Глобальный сброс таймера\");\n        // Сбрасываем отображение таймера\n        var timerElement = document.querySelector(\".timer-watch\");\n        if (timerElement) {\n            timerElement.textContent = \"00:00\";\n        }\n    };\n    return Timer;\n}());\nexport { Timer };\n","import { templateEngine } from \"../lib/template-engine.js\";\nimport { StartPage } from \"./start\";\nimport { Timer } from \"./timer\";\nvar WinPage = /** @class */ (function () {\n    function WinPage(element) {\n        var _this = this;\n        this.timerResult = null;\n        this.buttonRestart = null;\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(\"передана не HTML элемент\");\n        }\n        this.element = element;\n        this.currentPage = \"lose\";\n        this.timer = new Timer();\n        this.render();\n        this.timerResult = Number(localStorage.getItem(\"timer\"));\n        var displayElement = document.querySelector(\".card-timer-watch\");\n        if (displayElement && this.timerResult !== null) {\n            this.timer.updateDisplay(displayElement, this.timerResult);\n        }\n        localStorage.removeItem(\"timer\");\n        this.buttonRestart = document.querySelector(\".card-celebrate-button\");\n        if (this.buttonRestart) {\n            this.buttonRestart.addEventListener(\"click\", function () {\n                _this.onClickButtonRestart();\n            });\n        }\n    }\n    WinPage.prototype.onClickButtonRestart = function () {\n        this.element.innerHTML = \"\";\n        localStorage.removeItem(\"level-card-game\");\n        new StartPage(this.element);\n    };\n    WinPage.prototype.render = function () {\n        var template = WinPage.template();\n        var element = templateEngine(template);\n        // Очищаем элемент перед добавлением нового контента\n        this.element.innerHTML = \"\";\n        this.element.appendChild(element);\n    };\n    WinPage.template = function () {\n        return {\n            tag: \"div\",\n            cls: \"card-box\",\n            content: [\n                {\n                    tag: \"img\",\n                    cls: \"card-celebrate-img\",\n                    attrs: {\n                        alt: \"смайлик победы\",\n                        src: \"../static/сelebrate.svg\",\n                    },\n                },\n                {\n                    tag: \"h6\",\n                    cls: \"card-celebrate-text\",\n                    content: \"Вы проиграли!\",\n                },\n                {\n                    tag: \"h6\",\n                    cls: \"card-celebrate-time-text\",\n                    content: \"Затраченное время:\",\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-timer-watch\",\n                    content: \"00:00\",\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-celebrate-button\",\n                    content: \"Играть снова\",\n                },\n            ],\n        };\n    };\n    return WinPage;\n}());\nexport { WinPage };\n","export function templateEngine(block) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode(\"\");\n    }\n    if (\n        typeof block === \"string\" ||\n        typeof block === \"number\" ||\n        block === true\n    ) {\n        return document.createTextNode(block);\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment();\n\n        block.forEach((element) => {\n            fragment.appendChild(templateEngine(element));\n        });\n\n        return fragment;\n    }\n\n    const result = document.createElement(block.tag);\n\n    if (block.cls) {\n        const classes = [].concat(block.cls);\n        classes.forEach((cls) => {\n            result.classList.add(cls);\n        });\n    }\n\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs);\n\n        keys.forEach((key) => {\n            result.setAttribute(key, block.attrs[key]);\n        });\n    }\n\n    result.appendChild(templateEngine(block.content));\n\n    return result;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { PlayPage } from \"./play\";\nimport { StartPage } from \"./start\";\nimport \"../css/style.css\";\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var appElement = document.querySelector(\".app\");\n    if (!appElement) {\n        console.error(\"Элемент .app не найден!\");\n        return;\n    }\n    if (!localStorage.getItem(\"level-card-game\")) {\n        new StartPage(appElement);\n    }\n    else {\n        new PlayPage(appElement);\n    }\n});\n"],"names":[],"sourceRoot":""}