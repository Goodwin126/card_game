{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;ACA2D;AACpB;;AAEhC;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,gDAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,uEAAc;AACtC;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,uEAAc;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA,gEAAgE,UAAU;AAC1E,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA,yCAAyC;AACzC;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,gDAAgD,UAAU;AAC1D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;;ACrU2D;AACtB;;AAE9B;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,uEAAc;AACtC,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA,YAAY,8CAAQ;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAA0B,mDAAmD;AAC7E,0BAA0B,mDAAmD;AAC7E,0BAA0B,mDAAmD;AAC7E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,iBAAiB;AACjB;AACA;AACA;AACA;;;;;;;;;;;;;;;AChFO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;;;;;;UCzCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;;;;;;;;;;ACNqC;AACE;AACb;;AAE1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,gDAAS;AACrB,MAAM;AACN,YAAY,8CAAQ;AACpB;AACA,CAAC","sources":["webpack://card-game/./src/css/style.css?6b7b","webpack://card-game/./src/js/play.js","webpack://card-game/./src/js/start.js","webpack://card-game/./src/lib/template-engine.js","webpack://card-game/webpack/bootstrap","webpack://card-game/webpack/runtime/define property getters","webpack://card-game/webpack/runtime/hasOwnProperty shorthand","webpack://card-game/webpack/runtime/make namespace object","webpack://card-game/./src/js/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { templateEngine } from \"../lib/template-engine.js\";\nimport { StartPage } from \"./start.js\";\n\nexport class PlayPage {\n    constructor(element) {\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(\"передана не HTML элемент\");\n        }\n        this.element = element;\n        window.application.currentPage = \"play\";\n\n        window.application.level = localStorage.getItem(\"level-card-game\");\n        this.oponCards = [];\n        this.deck = this.createDeck();\n\n        if (!this.element.querySelector(\".card-deck\")) {\n            console.error(\"Элемент .card-deck не найден!\");\n            return;\n        }\n\n        this.buttonRestart = document.querySelector(\".btn-restart\");\n        this.buttonRestart.addEventListener(\"click\", () => {\n            this.onClickButtonRestart();\n        });\n\n        this.cards = document.querySelector(\".card-deck\");\n        this.cards.addEventListener(\"click\", (event) => {\n            this.onClickCard(event);\n        });\n    }\n\n    onClickCard(event) {\n        // Обработчик клика по карте\n        if (event.target.classList.contains(\"card-back\")) {\n            const index = event.target.dataset.index;\n            if (!this.oponCards.includes(index)) {\n                this.oponCards.push(index);\n\n                const card = this.cardsForGame[index];\n\n                this.renderCardOne(event.target, card);\n                this.checkCardsMatch();\n            }\n        }\n    }\n\n    checkCardsMatch() {\n        // Функция проверки на совпадение\n        if (this.oponCards.length % 2 === 0) {\n            const index1 = this.oponCards[this.oponCards.length - 2];\n            const index2 = this.oponCards[this.oponCards.length - 1];\n            let card1 = this.cardsForGame[index1];\n            let card2 = this.cardsForGame[index2];\n\n            if (card1.rank === card2.rank && card1.suit === card2.suit) {\n                this.checkGameOver();\n                // Карты совпали\n            } else {\n                // Перевернуть карты обратно\n                alert(\"Вы проиграли!\");\n            }\n        }\n    }\n    checkGameOver() {\n        if (this.oponCards.length === this.cardsForGame.length) {\n            alert(\"Поздравляем! Вы выиграли!\");\n            this.element.innerHTML = \"\";\n            new StartPage(this.element);\n        }\n    }\n\n    onClickButtonRestart() {\n        //Клик по кнопке \"Начать заново\"\n        this.element.innerHTML = \"\";\n        localStorage.removeItem(\"level-card-game\");\n        new StartPage(this.element);\n    }\n\n    createDeck() {\n        // Функция создания колоды карт\n        let deck = [];\n        const ranks = [6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"];\n        const suits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"];\n\n        //создаем калоду\n        for (const suit of suits) {\n            for (const rank of ranks) {\n                deck.push({\n                    rank: rank,\n                    suit: suit,\n                });\n            }\n        }\n        //перемешиваем калоду\n        this.shuffleDeck(deck);\n        //выбираем карты исходя из уровня сложности\n        this.selectCardByLevel(deck);\n        //создаём дубли\n        this.cardsForGame = this.createDuble(deck);\n        //перемешивает полученные карты\n        this.shuffleDeck(this.cardsForGame);\n        window.application.cards = this.cardsForGame;\n        //отрисовываем карты\n        this.render();\n        setTimeout(() => {\n            this.renderCardCover();\n        }, 5000);\n    }\n\n    selectCardByLevel(deck) {\n        const level = window.application.level;\n        switch (level) {\n            case \"1\":\n                deck.length = 3;\n                break;\n            case \"2\":\n                deck.length = 6;\n                break;\n            case \"3\":\n                deck.length = 9;\n                break;\n        }\n    }\n\n    createDuble(cards) {\n        // Функция создания дублей\n        const cardsForGame = [];\n        cards.forEach((card) => {\n            cardsForGame.push(card);\n            cardsForGame.push({ ...card });\n        });\n        return cardsForGame;\n    }\n\n    renderCardCover() {\n        // Функция отрисовки одной карты\n        const cards = this.element.querySelectorAll(\".card\");\n        cards.forEach((card, index) => {\n            card.innerHTML = \"\";\n            card.classList.add(\"card-back\");\n            card.dataset.index = index;\n        });\n        return cards;\n    }\n\n    shuffleDeck(deck) {\n        // Функция перемешивания колоды\n        for (let i = deck.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [deck[i], deck[j]] = [deck[j], deck[i]];\n        }\n    }\n\n    renderCardOne(elementTarget, card) {\n        // Функция отрисовки рубашек карты\n        const template = PlayPage.templateCard(card);\n        const element = templateEngine(template);\n        elementTarget.classList.remove(\"card-back\");\n        elementTarget.appendChild(element);\n    }\n\n    render() {\n        const template = PlayPage.template(this.cardsForGame);\n        const element = templateEngine(template);\n        this.element.innerHTML = \"\";\n        this.element.appendChild(element);\n    }\n\n    static template(deck) {\n        return {\n            tag: \"div\",\n            cls: \"cards\",\n            content: [\n                {\n                    tag: \"div\",\n                    cls: \"control-panel\",\n                    content: [\n                        {\n                            tag: \"div\",\n                            cls: \"timer-box\",\n                            content: [\n                                {\n                                    tag: \"div\",\n                                    cls: \"timer-artical\",\n                                    content: [\n                                        {\n                                            tag: \"div\",\n                                            cls: \"timer-artical-sec\",\n                                            content: \"sek\",\n                                        },\n                                        {\n                                            tag: \"div\",\n                                            cls: \"timer-artical-sec\",\n                                            content: \"min\",\n                                        },\n                                    ],\n                                },\n                                {\n                                    tag: \"div\",\n                                    cls: \"timer-watch\",\n                                    content: \"00.00\",\n                                },\n                            ],\n                        },\n                        {\n                            tag: \"button\",\n                            cls: \"btn-restart\",\n                            content: \"Начать заново\",\n                        },\n                    ],\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-deck\",\n                    content: deck.map((card) => ({\n                        tag: \"div\",\n                        cls: \"card\",\n                        content: [\n                            {\n                                tag: \"div\",\n                                cls: \"card-box-up\",\n                                content: {\n                                    tag: \"div\",\n                                    cls: \"card-small-box\",\n                                    content: [\n                                        {\n                                            tag: \"div\",\n                                            cls: \"card-name\",\n                                            content: card.rank,\n                                        },\n                                        {\n                                            tag: \"div\",\n                                            cls: [\n                                                \"card-small-suit\",\n                                                `card-small-suit_${card.suit}`,\n                                            ],\n                                        },\n                                    ],\n                                },\n                            },\n                            {\n                                tag: \"div\",\n                                cls: [\"cart-suit\", `cart-suit_${card.suit}`],\n                            },\n                            {\n                                tag: \"div\",\n                                cls: \"card-box-down\",\n                                content: {\n                                    tag: \"div\",\n                                    cls: \"card-small-box-reverse\",\n                                    content: [\n                                        {\n                                            tag: \"div\",\n                                            cls: \"card-name\",\n                                            content: card.rank,\n                                        },\n                                        {\n                                            tag: \"div\",\n                                            cls: [\n                                                \"card-small-suit\",\n                                                `card-small-suit_${card.suit}`,\n                                            ],\n                                        },\n                                    ],\n                                },\n                            },\n                        ],\n                    })),\n                },\n            ],\n        };\n    }\n\n    static templateCard(card) {\n        return [\n            {\n                tag: \"div\",\n                cls: \"card-box-up\",\n                content: {\n                    tag: \"div\",\n                    cls: \"card-small-box\",\n                    content: [\n                        {\n                            tag: \"div\",\n                            cls: \"card-name\",\n                            content: card.rank,\n                        },\n                        {\n                            tag: \"div\",\n                            cls: [\n                                \"card-small-suit\",\n                                `card-small-suit_${card.suit}`,\n                            ],\n                        },\n                    ],\n                },\n            },\n            {\n                tag: \"div\",\n                cls: [\"cart-suit\", `cart-suit_${card.suit}`],\n            },\n            {\n                tag: \"div\",\n                cls: \"card-box-down\",\n                content: {\n                    tag: \"div\",\n                    cls: \"card-small-box-reverse\",\n                    content: [\n                        {\n                            tag: \"div\",\n                            cls: \"card-name\",\n                            content: card.rank,\n                        },\n                        {\n                            tag: \"div\",\n                            cls: [\n                                \"card-small-suit\",\n                                `card-small-suit_${card.suit}`,\n                            ],\n                        },\n                    ],\n                },\n            },\n        ];\n    }\n}\n","import { templateEngine } from \"../lib/template-engine.js\";\nimport { PlayPage } from \"./play.js\";\n\nexport class StartPage {\n    constructor(element) {\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(\"передана не HTML элемент\");\n        }\n        window.application.currentPage = \"start\";\n\n        this.onHendlerClickLevel = this.onHendlerClickLevel.bind(this);\n        this.onHendkerClickStart = this.onHendkerClickStart.bind(this);\n        this.render();\n        this.level = element.querySelector(\".card-level-box\");\n\n        this.buttonChoice = element.querySelector(\".card-level-button\");\n        this.levelItems = element\n            .querySelector(\".card-level-box\")\n            .querySelectorAll(\".card-level-item\");\n\n        this.level.addEventListener(\"click\", this.onHendlerClickLevel);\n        this.buttonChoice.addEventListener(\"click\", this.onHendkerClickStart);\n    }\n\n    render() {\n        const template = StartPage.template();\n        const element = templateEngine(template);\n        this.element.innerHTML = \"\"; // Очищаем элемент перед рендерингом\n        this.element.appendChild(element);\n    }\n\n    onHendkerClickStart() {\n        this.element.innerHTML = \"\";\n        window.application.currentPage = \"play\";\n        new PlayPage(this.element);\n    }\n\n    onHendlerClickLevel(event) {\n        if (!event.target.classList.contains(\"card-level-item\")) {\n            return;\n        }\n\n        this.levelItems.forEach((item) => {\n            item.classList.remove(\"card-level-item-choice\");\n        });\n\n        event.target.classList.add(\"card-level-item-choice\");\n        const level = event.target.textContent;\n        localStorage.setItem(\"level-card-game\", level);\n        this.buttonChoice.removeAttribute(\"disabled\");\n    }\n\n    static template() {\n        return {\n            tag: \"div\",\n            cls: \"card-box\",\n            content: [\n                {\n                    tag: \"h6\",\n                    cls: \"card-level-text\",\n                    content: \"Выбери сложность\",\n                },\n                {\n                    tag: \"div\",\n                    cls: \"card-level-box\",\n                    content: [\n                        { tag: \"button\", cls: \"card-level-item\", content: 1 },\n                        { tag: \"button\", cls: \"card-level-item\", content: 2 },\n                        { tag: \"button\", cls: \"card-level-item\", content: 3 },\n                    ],\n                },\n                {\n                    tag: \"button\",\n                    cls: \"card-level-button\",\n                    content: \"Старт\",\n                    attrs: { disabled: true },\n                },\n            ],\n        };\n    }\n}\n","export function templateEngine(block) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode(\"\");\n    }\n    if (\n        typeof block === \"string\" ||\n        typeof block === \"number\" ||\n        block === true\n    ) {\n        return document.createTextNode(block);\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment();\n\n        block.forEach((element) => {\n            fragment.appendChild(templateEngine(element));\n        });\n\n        return fragment;\n    }\n\n    const result = document.createElement(block.tag);\n\n    if (block.cls) {\n        const classes = [].concat(block.cls);\n        classes.forEach((cls) => {\n            result.classList.add(cls);\n        });\n    }\n\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs);\n\n        keys.forEach((key) => {\n            result.setAttribute(key, block.attrs[key]);\n        });\n    }\n\n    result.appendChild(templateEngine(block.content));\n\n    return result;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { PlayPage } from \"./play.js\";\nimport { StartPage } from \"./start.js\";\nimport \"../css/style.css\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    window.application = {\n        currentPage: null,\n    };\n\n    const appElement = document.querySelector(\".app\");\n\n    if (!appElement) {\n        console.error(\"Элемент .app не найден!\");\n        return;\n    }\n\n    if (!localStorage.getItem(\"level-card-game\")) {\n        new StartPage(appElement);\n    } else {\n        new PlayPage(appElement);\n    }\n});\n"],"names":[],"sourceRoot":""}